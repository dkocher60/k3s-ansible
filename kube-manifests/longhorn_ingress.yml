# Solving API issue.
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: svc-longhorn-headers
  namespace: longhorn-system
spec:
  headers:
    customRequestHeaders:
      X-Forwarded-Proto: "https"
---
# HTTPS Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: longhorn-ingress
  namespace: longhorn-system
  annotations:
    # HTTPS as entry point
    # traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.entrypoints: web
    # Enable TLS
    # traefik.ingress.kubernetes.io/router.tls: "true"
    # Use Basic Auth Midleware configured
    # traefik.ingress.kubernetes.io/router.middlewares:
    #   traefik-basic-auth@kubernetescrd,
    #   longhorn-system-svc-longhorn-headers@kubernetescrd
    # Enable cert-manager to create automatically the SSL certificate and store in Secret
    # cert-manager.io/cluster-issuer: ca-issuer
    # cert-manager.io/common-name: longhorn.picluster.ricsanfre.com
spec:
  # tls:
  # - hosts:
  #   - storage.picluster.ricsanfre.com
  #   secretName: storage-tls
  rules:
  # - host: longhorn.picluster.ricsanfre.com
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: longhorn-frontend
            port:
              number: 80
# ---
# # http ingress for http->https redirection
# kind: Ingress
# apiVersion: networking.k8s.io/v1
# metadata:
#   name: longhorn-redirect
#   namespace: longhorn-system
#   annotations:
#     # Use redirect Midleware configured
#     traefik.ingress.kubernetes.io/router.middlewares: traefik-redirect@kubernetescrd
#     # HTTP as entrypoint
#     traefik.ingress.kubernetes.io/router.entrypoints: web
# spec:
#   rules:
#     - host: longhorn.picluster.ricsanfre.com
#       http:
#         paths:
#         - path: /
#           pathType: Prefix
#           backend:
#             service:
#               name: longhorn-frontend
#               port:
#                 number: 80

